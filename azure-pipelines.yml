# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

steps:

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package clean install'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: replacetokens@4
  inputs:
    targetFiles: |
      kubernetes/app.yaml
      manifest.yml
    encoding: 'auto'
    tokenPattern: 'rm'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    actionOnNoFiles: 'continue'
    enableTransforms: false
    useLegacyPattern: false
    enableTelemetry: true
    
- task: Docker@2
  inputs:
    containerRegistry: 'worknet-java'
    repository: 'worknet-java-dev'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    buildContext: '$(Pipeline.Workspace)/s'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/s/kubernetes/app.yaml'
    artifact: 'azure-deploy-dev'
    publishLocation: 'pipeline'      